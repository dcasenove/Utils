cmake_minimum_required(VERSION 2.6)
set(CMAKE_CXX_STANDARD 11)
project(radiotap)
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
  MESSAGE("Clang")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
  MESSAGE("GNU")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
  MESSAGE("Intel")
elseif ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "MSVC")
  MESSAGE("MSVC")
endif()
add_definitions("-D_BSD_SOURCE -DRADIOTAP_SUPPORT_OVERRIDES")
include_directories(/usr/local/include/)
add_library(radiotap SHARED radiotap.c)
add_library(Device SHARED Device.cpp)
add_library(WiFiResult SHARED WifiResult.cpp)
add_library(RadiotapScanner SHARED RadiotapScanner.cpp)
set_target_properties(radiotap PROPERTIES COMPILE_FLAGS "-Wall -Wextra -g")
set_target_properties(Device PROPERTIES COMPILE_FLAGS "-Wall -Wextra -g")
set_target_properties(RadiotapScanner PROPERTIES COMPILE_FLAGS "-Wall -Wextra -g -lpcap")
set_target_properties(WiFiResult PROPERTIES COMPILE_FLAGS "-Wall -Wextra -g")
target_link_libraries(RadiotapScanner radiotap pcap Device WiFiResult)
install(TARGETS radiotap DESTINATION lib)
install(TARGETS Device DESTINATION lib)
install(TARGETS RadiotapScanner DESTINATION lib)
install(TARGETS WiFiResult DESTINATION lib)
install(FILES radiotap.h radiotap_iter.h Device.h WiFiResult.h RadiotapScanner.h DESTINATION include)

add_executable(pcap_radiotap pcap_radiotap.cpp)
set_target_properties(pcap_radiotap PROPERTIES
		      COMPILE_FLAGS " -v -Wall -Wextra -g -lpcap")
          target_link_libraries(pcap_radiotap radiotap Device WiFiResult RadiotapScanner pcap)
